---
## Limits ##
# limits Available in Consul 0.9.3 and later, this is a nested object that configures limits that are enforced by the agent.
# Prior to Consul 1.5.2, this only applied to agents in client mode, not Consul servers.
# The following parameters are available:

# Configures a limit of how many concurrent TCP connections a single client IP address is allowed to open to the agent's HTTP(S) server.
# This affects the HTTP(S) servers in both client and server agents. Default value is 200.
consul_limits_http_max_conns_per_client: "200"

#Configures the limit for how long the HTTPS server in both client and server agents will wait for a client to complete a TLS handshake.
# This should be kept conservative as it limits how many connections an unauthenticated attacker can open if verify_incoming is being using to authenticate clients (strongly recommended in production).
# Default value is 5s.
consul_limits_https_handshake_timeout: "5s"

# Configures the limit for how long servers will wait after a client TCP connection is established before they complete the connection handshake.
# When TLS is used, the same timeout applies to the TLS handshake separately from the initial protocol negotiation.
# All Consul clients should perform this immediately on establishing a new connection.
# This should be kept conservative as it limits how many connections an unauthenticated attacker can open if verify_incoming is being using to authenticate clients (strongly recommended in production).
# When verify_incoming is true on servers, this limits how long the connection socket and associated goroutines will be held open before the client successfully authenticates.
# Default value is 5s.
consul_limits_rpc_handshake_timeout: "5s"

# Configures a limit of how many concurrent TCP connections a single source IP address is allowed to open to a single server.
# It affects both clients connections and other server connections.
# In general Consul clients multiplex many RPC calls over a single TCP connection so this can typically be kept low.
# It needs to be more than one though since servers open at least one additional connection for raft RPC, possibly more for WAN federation when using network areas, and snapshot requests from clients run over a separate TCP conn.
# A reasonably low limit significantly reduces the ability of an unauthenticated attacker to consume unbounded resources by holding open many connections.
# You may need to increase this if WAN federated servers connect via proxies or NAT gateways or similar causing many legitimate connections from a single source IP.
# Default value is 100 which is designed to be extremely conservative to limit issues with certain deployment patterns.
# Most deployments can probably reduce this safely.
# 100 connections on modern server hardware should not cause a significant impact on resource usage from an unauthenticated attacker though.
consul_limits_rpc_max_conns_per_client: "100"

# Configures the RPC rate limiter on Consul clients by setting the maximum request rate that this agent is allowed to make for RPC requests to Consul servers, in requests per second.
# Defaults to infinite, which disables rate limiting.
consul_limits_rpc_rate: ""

# The size of the token bucket used to recharge the RPC rate limiter on Consul clients.
# Defaults to 1000 tokens, and each token is good for a single RPC call to a Consul server.
# See https://en.wikipedia.org/wiki/Token_bucket for more details about how token bucket rate limiters operate.
consul_limits_rpc_max_burst: "1000"

# (Advanced) Configures the maximum number of bytes for a kv request body to the /v1/kv endpoint.
# This limit defaults to raft's suggested max size (512KB).
# Note that tuning these improperly can cause Consul to fail in unexpected ways, it may potentially affect leadership stability and prevent timely heartbeat signals by increasing RPC IO duration.
# This option affects the txn endpoint too, but Consul 1.7.2 introduced txn_max_req_len which is the preferred way to set the limit for the txn endpoint. If both limits are set, the higher one takes precedence.
consul_limits_kv_max_value_size: "524288"

# (Advanced) Configures the maximum number of bytes for a transaction request body to the /v1/txn endpoint.
# This limit defaults to raft's suggested max size (512KB).
# Note that tuning these improperly can cause Consul to fail in unexpected ways, it may potentially affect leadership stability and prevent timely heartbeat signals by increasing RPC IO duration.
consul_limits_txn_max_req_len: "524288"
