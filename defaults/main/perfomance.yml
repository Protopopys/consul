---
## Performance ##
# Available in Consul 0.7 and later, this is a nested object that allows tuning the performance of different subsystems in Consul.
# See the Server Performance documentation for more details.
# The following parameters are available:

# A duration that a server will dwell during a graceful leave in order to allow requests to be retried against other Consul servers.
# Under normal circumstances, this can prevent clients from experiencing "no leader" errors when performing a rolling update of the Consul servers.
# This was added in Consul 1.0. Must be a duration value such as 10s. Defaults to 5s.
consul_performance_leave_drain_time: "5s"

# An integer multiplier used by Consul servers to scale key Raft timing parameters. Omitting this value or setting it to 0 uses default timing described below.
# Lower values are used to tighten timing and increase sensitivity while higher values relax timings and reduce sensitivity.
# Tuning this affects the time it takes Consul to detect leader failures and to perform leader elections, at the expense of requiring more network and CPU resources for better performance.
# By default, Consul will use a lower-performance timing that's suitable for minimal Consul servers, currently equivalent to setting this to a value of 5 (this default may be changed in future versions of Consul, depending if the target minimum server profile changes).
# Setting this to a value of 1 will configure Raft to its highest-performance mode, equivalent to the default timing of Consul prior to 0.7, and is recommended for production Consul servers.
# See the note on last contact timing for more details on tuning this parameter. The maximum allowed value is 10.
consul_performance_raft_multiplier: "5"

# A duration that a client or server will retry internal RPC requests during leader elections.
# Under normal circumstances, this can prevent clients from experiencing "no leader" errors. This was added in Consul 1.0. Must be a duration value such as 10s. Defaults to 7s.
consul_performance_rpc_hold_timeout: "7s"
